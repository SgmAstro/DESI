#!/bin/bash
export RESET=1

# export DRYRUN=''
export DRYRUN='--dryrun'                                                                                                                                                                           

export CODE_ROOT=$HOME/DESI/

export TILING_CATDIR=$HOME/data/
export GOLD_DIR=$HOME/data/GAMA4/
export RANDOMS_DIR=$HOME/data/GAMA4/randoms/

export PATH=$HOME/.conda/envs/lumfn/bin/:$HOME/DESI/bin/:$PATH
export PYTHONPATH=$HOME/$HOME/DESI/:$PYTHONPATH

if (( $RESET > 0 )); then
    echo
    echo '>>>>>  TRASHING GOLD_DIR AND RANDOMS  <<<<<.'
    echo 
    rm $GOLD_DIR/*.fits
    rm $RANDOMS_DIR/*$FIELD*.fits
    rm $CODE_ROOT/logs/*.log

    rm gold_pipeline.log
    rm gold_d8_pipeline.log

    rm rand_pipeline.log
    rm rand_d8_pipeline.log

    # ls -l $GOLD_DIR/
    # ls -l $RANDOMS_DIR/
    # ls -l $CODE_ROOT/logs/
fi

#  ----  Total of eight jobs, with correct dependency logic  ----
export RESET=0

# Generate all steps up to reference LF. 
GOLD_JOBID=$(sbatch --parsable --export=DRYRUN=$DRYRUN,RESET=$RESET gold_pipeline)

echo
echo '>>>>> GOLD JOB ID <<<<<'
echo $GOLD_JOBID

# Generate all steps up to random fill factor and bound_dist. 
RAND_G9_JOBID=$(sbatch  --parsable --export=FIELD=G9,DRYRUN=$DRYRUN,RESET=$RESET  rand_pipeline)
RAND_G12_JOBID=$(sbatch --parsable --export=FIELD=G12,DRYRUN=$DRYRUN,RESET=$RESET rand_pipeline)
RAND_G15_JOBID=$(sbatch --parsable --export=FIELD=G15,DRYRUN=$DRYRUN,RESET=$RESET rand_pipeline)

# Dependency on gold ddp cat.
RAND_DDP_G9_JOBID=$(sbatch  --parsable --export=FIELD=G9,DRYRUN=$DRYRUN,RESET=$RESET  --dependency=afterok:$GOLD_JOBID rand_ddp1_pipeline)
RAND_DDP_G12_JOBID=$(sbatch --parsable --export=FIELD=G12,DRYRUN=$DRYRUN,RESET=$RESET --dependency=afterok:$GOLD_JOBID rand_ddp1_pipeline)
RAND_DDP_G15_JOBID=$(sbatch --parsable --export=FIELD=G15,DRYRUN=$DRYRUN,RESET=$RESET --dependency=afterok:$GOLD_JOBID rand_ddp1_pipeline)

echo
echo ' >>>>> RANDOM JOB IDS <<<<<'
echo $RAND_G9_JOBID
echo $RAND_G12_JOBID
echo $RAND_G15_JOBID

echo $RAND_DDP_G9_JOBID
echo $RAND_DDP_G12_JOBID
echo $RAND_DDP_G15_JOBID

# Requires ddp cat, & randoms; no reset required.  
RAND_D8_G9_JOBID=$(sbatch  --parsable --export=FIELD=G9,DRYRUN=$DRYRUN  --dependency=afterok:$GOLD_JOBID:$RAND_G9_JOBID  rand_d8_pipeline)
RAND_D8_G12_JOBID=$(sbatch --parsable --export=FIELD=G12,DRYRUN=$DRYRUN --dependency=afterok:$GOLD_JOBID:$RAND_G12_JOBID rand_d8_pipeline)
RAND_D8_G15_JOBID=$(sbatch --parsable --export=FIELD=G15,DRYRUN=$DRYRUN --dependency=afterok:$GOLD_JOBID:$RAND_G15_JOBID rand_d8_pipeline)

RAND_DDP_D8_G9_JOBID=$(sbatch  --parsable --export=FIELD=G9,DRYRUN=$DRYRUN  --dependency=afterok:$GOLD_JOBID:$RAND_DDP_G9_JOBID  rand_ddp1_d8_pipeline)
RAND_DDP_D8_G12_JOBID=$(sbatch --parsable --export=FIELD=G12,DRYRUN=$DRYRUN --dependency=afterok:$GOLD_JOBID:$RAND_DDP_G12_JOBID rand_ddp1_d8_pipeline)
RAND_DDP_D8_G15_JOBID=$(sbatch --parsable --export=FIELD=G15,DRYRUN=$DRYRUN --dependency=afterok:$GOLD_JOBID:$RAND_DDP_G15_JOBID rand_ddp1_d8_pipeline)

echo
echo ' >>>>> RANDOM D8 JOB IDS <<<<<'
echo $RAND_D8_G9_JOBID
echo $RAND_D8_G12_JOBID
echo $RAND_D8_G15_JOBID

echo $RAND_DDP_D8_G9_JOBID
echo $RAND_DDP_D8_G12_JOBID
echo $RAND_DDP_D8_G15_JOBID

echo
echo '>>>>>  GOLD D8 JOB IDS  <<<<<'
# Requires ddp cat. & random fill factor.                                                                                                                                                            
# Note: runs all fields simultaneously.                                                                                                                                         
sbatch --export=DRYRUN=$DRYRUN --dependency=afterok:$RAND_DDP_D8_G9_JOBID:$RAND_DDP_D8_G12_JOBID:$RAND_DDP_D8_G15_JOBID gold_d8_pipeline

echo 
echo '>>>>>  DONE.  <<<<<'
echo
