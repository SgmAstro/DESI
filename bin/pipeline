#!/bin/bash
export RESET=1

# export DRYRUN=''
export DRYRUN='--dryrun'                                                                                                                                                                           

export CODE_ROOT=$HOME/DESI/

export TILING_CATDIR=/cosma5/data/durham/dc-wils7/
export GOLD_DIR=/cosma5/data/durham/dc-wils7/GAMA4/
export RANDOMS_DIR=/cosma5/data/durham/dc-wils7/GAMA4/randoms/

export PATH=$HOME/.conda/envs/lumfn/bin/:$HOME/DESI/bin/:$PATH
export PYTHONPATH=$HOME/$HOME/DESI/:$PYTHONPATH

if (( $RESET > 0 )); then
    echo '>>>>>  TRASHING GOLD_DIR AND RANDOMS  <<<<<.'

    rm $GOLD_DIR/*.fits
    rm $RANDOMS_DIR/*$FIELD*.fits
    rm $CODE_ROOT/logs/*.log

    # ls -l $GOLD_DIR/
    # ls -l $RANDOMS_DIR/
    # ls -l $CODE_ROOT/logs/
 
    export RESET=0
fi

#  Total of eight jobs, with correct dependency logic.

# Generate all steps up to reference LF. 
GOLD_JOBID=$(sbatch --parsable  --export=DRYRUN=$DRYRUN gold_pipeline)

echo '>>>>> GOLD JOB ID <<<<<'
echo $GOLD_JOBID

# Generate all steps up to random fill factor and bound_dist. 
RAND_G9_JOBID=$(sbatch  --parsable --export=FIELD=G9,DRYRUN=$DRYRUN,RESET=$RESET  rand_pipeline)
RAND_G12_JOBID=$(sbatch --parsable --export=FIELD=G12,DRYRUN=$DRYRUN,RESET=$RESET rand_pipeline)
RAND_G15_JOBID=$(sbatch --parsable --export=FIELD=G15,DRYRUN=$DRYRUN,RESET=$RESET rand_pipeline)

echo ' >>>>> RANDOM JOB IDS <<<<<'
echo $RAND_G9_JOBID
echo $RAND_G12_JOBID
echo $RAND_G15_JOBID
echo '-----'

echo '>>>>>  DEPENDENT JOBS  <<<<<'

# Requires ddp cat. & random fill factor. 
# Note: runs all fields simultaneously. 
sbatch --dependency=afterok:$GOLD_JOBID gold_d8_pipeline

# Requires ddp cat, & randoms; no reset required.  
sbatch --export=FIELD=G9  --dependency=afterok:$GOLD_JOBID:$RAND_G9_JOBID rand_d8_pipeline
sbatch --export=FIELD=G12 --dependency=afterok:$GOLD_JOBID:$RAND_G12_JOBID rand_d8_pipeline
sbatch --export=FIELD=G15 --dependency=afterok:$GOLD_JOBID:$RAND_G15_JOBID rand_d8_pipeline
