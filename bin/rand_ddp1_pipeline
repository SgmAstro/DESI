#!/bin/bash
#SBATCH -p cordelia                                                                                                                                                                  
#SBATCH --mem=120G  
#SBATCH -t 04:00:00 
#SBATCH -o /cosma/home/durham/dc-wils7/data/GAMA4/randoms/logs/rand_ddp1_pipeline.log                                                                                                                   
#SBATCH -A durham                                                                                                                                                                                    
#SBATCH --nodes=1                                                                                                                                                                                    
#SBATCH --ntasks-per-node=1    
#SBATCH --open-mode=append

# Submit with:  sbatch rand_ddp1_pipeline
# to qos of []
# See status with e.g. squeue -u mjwilson
# 

# printenv

if [[ -z "${FIELD}" ]]; then  
  export FIELD="G12"
  echo  'FIELD NOT FOUND. SETTING TO BE '$FIELD
else
  echo 'FIELD SET TO BE '$FIELD
fi

if [ -z ${DRYRUN+x} ]; then
  export DRYRUN='' 
  # export DRYRUN='--dryrun'
else
  echo 'DRYRUN SET TO BE '$DRYRUN
fi

if [[ -z "${NOOVERWRITE}" ]]; then
  # export NOOVERWRITE=''                                                                                                                                                                             
  export NOOVERWRITE='--nooverwrite'
else
  echo  'RESET SET TO BE '$NOOVERWRITE
fi

if [[ -z "${SURVEY}" ]]; then
  export SURVEY='gama'
  export SURVEYARG='--survey gama'
else
  export SURVEYARG='--survey '$SURVEY

  echo 'SURVEY SET TO BE '$SURVEY
fi

export PATH=$HOME/.conda/envs/lumfn/bin/:$CODE_ROOT/bin/:$PATH
export PYTHONPATH=$CODE_ROOT:$PYTHONPATH

echo
echo 'Environment:'
echo
echo 'Code: '$CODE_ROOT
echo 'Gold output dir.: '$GOLD_DIR
echo 'Randoms output dir: '$RANDOMS_DIR

cd $CODE_ROOT

# source /project/projectdirs/desi/software/desi_environment.sh master

echo 'Running randoms ddp pipeline for field '$FIELD

echo 'Generating DDP randoms.'


DDP_FILE=$GOLD_DIR'/'$SURVEY'_gold_ddp'${DRYRUN/'--'/'_'}'.fits'

if [ -f "$DDP_FILE" ]; then
    echo "Found DDP file: "$DDP_FILE
else
    echo $DDP_FILE' does not exist.'
    exit 1
fi

ddp1_zmin=$(fitsheader $DDP_FILE -k 'DDP1_ZMIN' -e 1)
ddp1_zmin=$(echo $ddp1_zmin | cut -d " " -f 9)

ddp1_zmax=$(fitsheader $DDP_FILE -k 'DDP1_ZMAX' -e 1)
ddp1_zmax=$(echo $ddp1_zmax | cut -d " " -f 9)

echo 'DDP1_ZMIN:  '$ddp1_zmin
echo 'DDP1_ZMAX:  '$ddp1_zmax

# should match params.oversample_nrealisations
for REALZ in {0..5}
do
    python randoms.py --realz $REALZ --field $FIELD --prefix randoms_ddp1 --zmin $ddp1_zmin --zmax $ddp1_zmax $DRYRUN $NOOVERWRITE $SURVEYARG --log

    python boundary.py --field $FIELD --prefix randoms_ddp1 --zmin $ddp1_zmin --zmax $ddp1_zmax $DRYRUN $NOOVERWRITE $SURVEYARG --log

    python fillfactor.py --realz $REALZ --field $FIELD --prefix randoms_ddp1 $DRYRUN $NOOVERWRITE $SURVEYARG --log
done

python bound_dist.py --field $FIELD --prefix randoms_ddp1 $DRYRUN $NOOVERWRITE $SURVEYARG --log

# TODO:  QA scripts need updated to point to RANDOMS_DIR, GOLD_DIR
# pytest

echo 'Done.'
