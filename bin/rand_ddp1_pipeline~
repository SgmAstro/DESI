#!/bin/bash
#SBATCH -p cosma                                                                                                                                                                                    
#SBATCH -t 300                                                                                                                                                                                      
#SBATCH -o rand_ddp1_pipeline.log                                                                                                                                                                    
#SBATCH -A durham                                                                                                                                                                                    
#SBATCH --nodes=1                                                                                                                                                                                    
#SBATCH --ntasks-per-node=1    
#SBATCH --open-mode=append

# Submit with:  sbatch rand_ddp1_pipeline
# to qos of []
# See status with e.g. squeue -u mjwilson
# 

# printenv

if [[ -z "${FIELD}" ]]; then  
  export FIELD="G15"
  echo  'FIELD NOT FOUND. SETTING TO BE '$FIELD
else
  echo 'FIELD SET TO BE '$FIELD
fi

if [[ -z "${DRYRUN}" ]]; then
  # export DRYRUN='' 
  export DRYRUN='--dryrun'
else
  echo 'DRYRUN SET TO BE '$DRYRUN
fi

export CODE_ROOT=$HOME/DESI/

export TILING_CATDIR=$HOME/data/
export GOLD_DIR=$HOME/data/GAMA4/
export RANDOMS_DIR=$HOME/data/GAMA4/randoms/

export PATH=$HOME/.conda/envs/lumfn/bin/:$HOME/DESI/bin/:$PATH
export PYTHONPATH=$HOME/$HOME/DESI/:$PYTHONPATH

echo
echo 'Environment:'
echo
echo 'Code: '$CODE_ROOT
echo 'Gold output dir.: '$GOLD_DIR
echo 'Randoms output dir: '$RANDOMS_DIR

cd $CODE_ROOT

# source /project/projectdirs/desi/software/desi_environment.sh master

echo 'Running randoms ddp pipeline for field '$FIELD

echo 'Generating DDP randoms.'

DDP_FILE=$GOLD_DIR/gama_gold_ddp${DRYRUN/'--'/'_'}.fits

echo $DRYRUN

if [ -f "$DDP_FILE" ]; then
    echo "Found DDP file"
else
    echo $DDP_FILE' does not exist.'
    exit 1
fi

ddp1_zmin=$(fitsheader $DDP_FILE -k 'DDP1_ZMIN' -e 1)
ddp1_zmin=$(echo $ddp1_zmin | cut -d " " -f 9)

ddp1_zmax=$(fitsheader $DDP_FILE -k 'DDP1_ZMAX' -e 1)
ddp1_zmax=$(echo $ddp1_zmax | cut -d " " -f 9)

echo 'DDP1_ZMIN:  '$ddp1_zmin
echo 'DDP1_ZMAX:  '$ddp1_zmax

python ~/DESI/randoms.py --field $FIELD --prefix randoms_ddp1 --zmin $ddp1_zmin --zmax $ddp1_zmax $DRYRUN > $CODE_ROOT/logs/randoms_ddp_$FIELD.log

# Uses Pool, should be on interactive. 
python fillfactor.py --field $FIELD --prefix randoms_ddp1 $DRYRUN > $CODE_ROOT/logs/fillfactor_$FIELD.log

# Uses Pool, should be on interactive.
python bound_dist.py --field $FIELD --prefix randoms_ddp1 $DRYRUN > $CODE_ROOT/logs/bound_dist_$FIELD.log

# TODO:  QA scripts need updated to point to RANDOMS_DIR, GOLD_DIR
# pytest

echo 'Done.'
