#!/bin/bash
#SBATCH -p cosma                                                                                                                                                                                    
#SBATCH -t 300                                                                                                                                                                                      
#SBATCH -o rand_pipeline.log                                                                                                                                                                         
#SBATCH -A durham                                                                                                                                                                                    
#SBATCH --nodes=1                                                                                                                                                                                    
#SBATCH --ntasks-per-node=1    
#SBATCH --open-mode=append

# Submit with:  sbatch rand_pipeline
# to qos of [debug, regular]
# See status with e.g. squeue -u mjwilson
# 

# printenv

if [[ -z "${FIELD}" ]]; then  
  export FIELD="G12"
  echo  'FIELD NOT FOUND. SETTING TO BE '$FIELD
else
  echo 'FIELD SET TO BE '$FIELD
fi

if [[ -z "${DRYRUN}" ]]; then
  export DRYRUN='' 
  # export DRYRUN='--dryrun'
else
  echo 'DRYRUN SET TO BE '$DRYRUN
fi

if [[ -z "${RESET}" ]]; then
  export RESET=0
else
  echo 'RESET SET TO BE '$RESET
fi

export CODE_ROOT=$HOME/DESI/

export TILING_CATDIR=/cosma5/data/durham/dc-wils7/
export GOLD_DIR=/cosma5/data/durham/dc-wils7/GAMA4/
export RANDOMS_DIR=/cosma5/data/durham/dc-wils7/GAMA4/randoms/

export PATH=$HOME/.conda/envs/lumfn/bin/:$HOME/DESI/bin/:$PATH
export PYTHONPATH=$HOME/$HOME/DESI/:$PYTHONPATH

echo
echo 'Environment:'
echo
echo 'Code: '$CODE_ROOT
echo 'Gold output dir.: '$GOLD_DIR
echo 'Randoms output dir: '$RANDOMS_DIR

cd $CODE_ROOT

# source /project/projectdirs/desi/software/desi_environment.sh master

if (( $RESET > 0 )); then
    echo '>>>>>  TRASHING RANDOMS_DIR FOR '$FIELD' <<<<<'
    
    rm $RANDOMS_DIR/*$FIELD*.fits
fi


echo 'Running randoms pipeline for field '$FIELD

# Serial code (--dryrun)
python randoms.py --field $FIELD $DRYRUN > logs/randoms_$FIELD.log

# Uses Pool, should be on interactive. 
python fillfactor.py --field $FIELD $DRYRUN > logs/fillfactor_$FIELD.log

# Uses Pool, should be on interactive.
python bound_dist.py --field $FIELD $DRYRUN > logs/bound_dist_$FIELD.log

# TODO:  QA scripts need updated to point to RANDOMS_DIR, GOLD_DIR
# pytest

echo 'Done.'
