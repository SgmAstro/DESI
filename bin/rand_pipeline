#!/bin/bash
#SBATCH -p cordelia                                                                                                                                                                 
#SBATCH --mem=120G  
#SBATCH -t 04:00:00 
#SBATCH -o /cosma/home/durham/dc-wils7/data/GAMA4/randoms/logs/rand_pipeline.log                                                                                                                       
#SBATCH -A durham                                                                                                                                                                                    
#SBATCH --nodes=1                                                                                                                                                                                    
#SBATCH --ntasks-per-node=1    
#SBATCH --open-mode=append

# printenv

if [[ -z "${FIELD}" ]]; then  
  export FIELD="G9"
  echo  'FIELD NOT FOUND. SETTING TO BE '$FIELD
else
  echo 'FIELD SET TO BE '$FIELD
fi

if [ -z ${DRYRUN+x} ]; then
  # export DRYRUN='' 
  export DRYRUN='--dryrun'
else
  echo 'DRYRUN SET TO BE '$DRYRUN
fi

if [[ -z "${RESET}" ]]; then
  export RESET=0
else
  echo  'RESET SET TO BE '$RESET
fi

if [[ -z "${NOOVERWRITE}" ]]; then
  export NOOVERWRITE=''
  # export NOOVERWRITE='--nooverwrite'
else
  echo  'RESET SET TO BE '$NOOVERWRITE
fi

if [[ -z "${SURVEY}" ]]; then
  export SURVEY='gama'
  export SURVEYARG='--survey gama'
else
  export SURVEYARG='--survey '$SURVEY

  echo 'SURVEY SET TO BE '$SURVEY
fi

export PATH=$HOME/.conda/envs/lumfn/bin/:$CODE_ROOT/bin/:$PATH
export PYTHONPATH=$CODE_ROOT:$PYTHONPATH

echo
echo 'Environment:'
echo
echo 'Code: '$CODE_ROOT
echo 'Gold output dir.: '$GOLD_DIR
echo 'Randoms output dir: '$RANDOMS_DIR

cd $CODE_ROOT

# source /project/projectdirs/desi/software/desi_environment.sh master

if (( $RESET > 0 )); then
    echo '>>>>>  TRASHING RANDOMS_DIR FOR '$FIELD' <<<<<'
    
    rm $RANDOMS_DIR/*$FIELD*.fits
fi


echo 'Running randoms pipeline for field '$FIELD

for REALZ in 0 1 2
do
    python randoms.py --realz $REALZ --field $FIELD $DRYRUN $NOOVERWRITE $SURVEYARG --log

    python boundary.py --field $FIELD $DRYRUN $NOOVERWRITE $SURVEYARG --log

    python fillfactor.py --realz $REALZ --field $FIELD $DRYRUN $NOOVERWRITE $SURVEYARG --log
done

python bound_dist.py --field $FIELD $DRYRUN $NOOVERWRITE $SURVEYARG --log

# TODO:  QA scripts need updated to point to RANDOMS_DIR, GOLD_DIR
# pytest

echo 'Done.'
